{"version":3,"sources":["services/firebase.js","hooks/use-user.js","components/header.js","components/discover-profiles.js","components/discovers.js","pages/discover.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","doesUserIpExist","userIp","getUserByUserUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","limit","filter","profile","loving","includes","getProfiles","amount","getLovedProfiles","getSavedProfiles","following","getLoversProfiles","lovers","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","booleam","followers","updateLoggedInUserLoving","unfollowCooldown","followCount","resetMonth","resetDay","Date","m","getUTCMonth","d","getUTCDate","updateFollowedUserLovers","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","photosWithUserDetails","getUserPhotosByUsername","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","isUserLovingProfile","toggleFollow","activeUserDocId","followingUserId","toggleLove","updateUserInformation","newMotto","oldMotto","newBirthyear","oldBirthyear","newMood","oldMood","newStatus","oldStatus","newZodiac","oldZodiac","newsnapchat","oldSnapchat","newinstagram","oldInstagram","motto","birthyear","mood","status","zodiac","snapchat","instagram","deleteImage","photoDocId","updateUserReputationUp","rep","reputation","useUser","useState","activeUser","setActiveUser","useContext","UserContext","useEffect","uid","getUserObjByUserId","Header","FirebaseContext","loggedInUser","searchName","setSearchName","history","useHistory","className","to","ROUTES","src","alt","maxLength","type","placeholder","onChange","target","value","toLowerCase","title","onClick","auth","signOut","push","onKeyDown","event","key","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","width","height","userPicture","DiscoverProfile","profilePicture","fullName","rank","align","onError","e","style","color","Discovers","profiles","setProfiles","globalAmount","setAmount","str","window","location","href","split","tail","pop","join","Number","isInteger","parseInt","sort","b","splice","suggestedProfiles","classname","count","Discover"],"mappings":"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","file":"static/js/8.9a16fbb4.chunk.js","sourcesContent":["import { array } from 'prop-types';\r\nimport { storage ,firebase, FieldValue } from '../lib/firebase';\r\n\r\nexport async function doesUsernameExist(username) { // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username)\r\n    .get();\r\n\r\n    return result.docs.length > 0;\r\n}\r\n\r\nexport async function doesUserIpExist(userIp) { // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('ipAddress', '==', userIp)\r\n    .get();\r\n\r\n    return result.docs.length > 0;\r\n}\r\n\r\nexport async function getUserByUserUsername(username) {  // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username)\r\n    .get();\r\n\r\n    return result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n}\r\n\r\n// get user from the firestore where userId === userId (passed from the auth)\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\r\n  const user = result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id\r\n  }));\r\n\r\n  return user;\r\n}\r\n\r\n// check all conditions before limit results\r\nexport async function getSuggestedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.loving.includes(profile.userId) && profile.loving.includes(userId.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results\r\nexport async function getProfiles(amount) {\r\n  const result = await firebase.firestore().collection('users').limit(amount).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getLovedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.loving.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getSavedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.following.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getLoversProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.lovers.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\nexport async function updateLoggedInUserFollowing(\r\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n  profileId, // the user that karl requests to follow\r\n  isFollowingProfile // true/false (am i currently following this person?)\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(loggedInUserDocId)\r\n    .update({\r\n      following: isFollowingProfile\r\n        ? FieldValue.arrayRemove(profileId)\r\n        : FieldValue.arrayUnion(profileId)\r\n    });\r\n}\r\nexport async function updateFollowedUserFollowers(\r\n  profileDocId, // currently logged in user document id (karl's profile)\r\n  loggedInUserDocId, // the user that karl requests to follow\r\n  isFollowingProfile, // true/false (am i currently following this person?)\r\n  booleam\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: isFollowingProfile\r\n        ? FieldValue.arrayRemove(loggedInUserDocId)\r\n        : FieldValue.arrayUnion(loggedInUserDocId)\r\n    });\r\n  }\r\n\r\n  export async function updateLoggedInUserLoving(\r\n    loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n    profileId, // the user that karl requests to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n    unfollowCooldown,\r\n    followCount,\r\n    resetMonth,\r\n    resetDay\r\n  ) {\r\n    var a = new Date();\r\n    var m = a.getUTCMonth();\r\n    var d = a.getUTCDate();\r\n\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(loggedInUserDocId)\r\n      .update({\r\n        loving: isFollowingProfile\r\n          ? unfollowCooldown ? FieldValue.arrayRemove(profileId) :  FieldValue.arrayRemove('') // Burası cooldown\r\n          : followCount ? FieldValue.arrayUnion(profileId) : FieldValue.arrayRemove(''), // Burası count\r\n        resetDay: unfollowCooldown ? (d+3) : resetDay,\r\n        resetMonth: unfollowCooldown ? (m) : resetMonth\r\n      });\r\n  }\r\n  export async function updateFollowedUserLovers(\r\n    profileDocId, // currently logged in user document id (karl's profile)\r\n    loggedInUserDocId, // the user that karl requests to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n    unfollowCooldown,\r\n    followCount\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(profileDocId)\r\n      .update({\r\n        lovers: isFollowingProfile\r\n          ? unfollowCooldown ? FieldValue.arrayRemove(loggedInUserDocId) :  FieldValue.arrayRemove('')// Burası\r\n          : followCount ? FieldValue.arrayUnion(loggedInUserDocId) : FieldValue.arrayRemove('')\r\n      });\r\n    }\r\n \r\n  export async function getPhotos(userId, following) {\r\n    // [5,4,2] => following \r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .where('userId', 'in', following) // kulanıcının UserID'sinin following kısmında olduğu yerleri al\r\n      .get();\r\n  \r\n    const userFollowedPhotos = result.docs.map((photo) => ({\r\n      ...photo.data(),\r\n      docId: photo.id\r\n    }));\r\n  \r\n    const photosWithUserDetails = await Promise.all(\r\n      userFollowedPhotos.map(async (photo) => {\r\n        let userLikedPhoto = false;\r\n        \r\n        // photo.userId = 2\r\n        const user = await getUserByUserId(photo.userId);\r\n        // raphael\r\n        const { username } = user[0];\r\n        return { username, ...photo, userLikedPhoto };\r\n      })\r\n    );\r\n  \r\n    return photosWithUserDetails;\r\n  }\r\n\r\n  /*\r\n  export async function getUserIdByUsername(username){\r\n    const result = firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: isFollowingProfile\r\n        ? FieldValue.arrayRemove(loggedInUserDocId)\r\n        : FieldValue.arrayUnion(loggedInUserDocId)\r\n    });\r\n  }\r\n  */\r\n\r\n  export async function getUserPhotosByUsername(username) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .where('userId', '==', username)\r\n      .get();\r\n  \r\n    return result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  }\r\n\r\n  export async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\r\n      .where('following', 'array-contains', profileUserId)\r\n      .get();\r\n  \r\n    const [response = {}] = result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  \r\n    return response.userId;\r\n  }\r\n\r\n  export async function isUserLovingProfile(loggedInUserUsername, profileUserId) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\r\n      .where('loving', 'array-contains', profileUserId)\r\n      .get();\r\n  \r\n    const [response = {}] = result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  \r\n    return response.userId;\r\n  }\r\n  \r\n  export async function toggleFollow(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId\r\n  ) {\r\n    // 1st param: karl's doc id\r\n    // 2nd param: raphael's user id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\r\n  \r\n    // 1st param: karl's user id\r\n    // 2nd param: raphael's doc id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\r\n  }\r\n\r\n  export async function toggleLove(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId,\r\n    unfollowCooldown,\r\n    followCount,\r\n    resetMonth,\r\n    resetDay\r\n  ) {\r\n    // 1st param: karl's doc id\r\n    // 2nd param: raphael's user id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateLoggedInUserLoving(activeUserDocId, profileUserId, isFollowingProfile,unfollowCooldown,followCount,resetMonth,resetDay);\r\n  \r\n    // 1st param: karl's user id\r\n    // 2nd param: raphael's doc id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateFollowedUserLovers(profileDocId, followingUserId, isFollowingProfile,unfollowCooldown,followCount);\r\n  }\r\n  \r\n  export async function updateUserInformation(\r\n    loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n    newMotto,  // Users new motto\r\n    oldMotto,  // Users old motto\r\n    newBirthyear,\r\n    oldBirthyear,\r\n    newMood,\r\n    oldMood,\r\n    newStatus,\r\n    oldStatus,\r\n    newZodiac,\r\n    oldZodiac,\r\n    newsnapchat,\r\n    oldSnapchat,\r\n    newinstagram,\r\n    oldInstagram\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(loggedInUserDocId)\r\n      .update({\r\n        motto: newMotto\r\n        ? newMotto\r\n        : oldMotto,\r\n        birthyear: newBirthyear\r\n        ? newBirthyear\r\n        : oldBirthyear,\r\n        mood: newMood\r\n        ? newMood\r\n        : oldMood,\r\n        status: newStatus\r\n        ? newStatus\r\n        : oldStatus,\r\n        zodiac: newZodiac\r\n        ? newZodiac\r\n        : oldZodiac,\r\n        snapchat: newsnapchat\r\n        ? newsnapchat\r\n        : oldSnapchat,\r\n        instagram: newinstagram\r\n        ? newinstagram\r\n        : oldInstagram\r\n      });\r\n  }\r\n\r\n  export async function deleteImage (photoDocId) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .doc(photoDocId)\r\n      .update(\r\n        {userId : \"\"\r\n      });\r\n  }\r\n\r\n  export async function updateUserReputationUp(\r\n    profileDocId,\r\n    rep\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(profileDocId)\r\n      .update({\r\n        reputation : rep + 1\r\n      });\r\n  }","import { useState, useEffect, useContext } from 'react';\r\nimport UserContext from '../context/user'\r\nimport { getUserByUserId } from '../services/firebase';\r\n\r\nexport default function useUser() {\r\n  const [activeUser, setActiveUser] = useState({});\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => { // Eğer Kullanıcı değişirse\r\n    async function getUserObjByUserId() {\r\n        // Kullanıcı ID'si üzerinden kullanıcının verilerini çekecek bir fonksiyon\r\n      const [response] = await getUserByUserId(user.uid);\r\n      setActiveUser(response);\r\n    }\r\n\r\n    if (user?.uid) {\r\n      getUserObjByUserId();\r\n    }\r\n  }, [user]);\r\n\r\n  return { user: activeUser };\r\n}","import { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport FirebaseContext from '../context/firebase';\r\nimport UserContext from '../context/user';\r\nimport * as ROUTES from '../constants/routes';\r\nimport useUser from '../hooks/use-user';\r\n\r\nexport default function Header() {\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const { user: loggedInUser } = useContext(UserContext);\r\n    const { user } = useUser(loggedInUser?.uid);\r\n\r\n    const [searchName, setSearchName] = useState('');\r\n    const history = useHistory();\r\n\r\n    return( \r\n        <header className=\"h-16 bg-white border-b border-gray-primary mb-8 px-2\">\r\n            <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n                <div className=\"flex justify-between h-full\">\r\n                    <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\r\n                        <h1 className=\"flex justify-center w-full\">\r\n                            <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\r\n                                <img src=\"https://firebasestorage.googleapis.com/v0/b/flask-895ac.appspot.com/o/DefaultAvatar%2Fbetalogo.png?alt=media&token=65dda1f6-05cb-4390-ac6a-92852feb123c\" alt=\"Instagram\" className=\"mt-2 w-6/12\" />\r\n                            </Link>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"text-gray-700 text-center flex items-center align-items\">\r\n                        {user ? ( // eğer kullanıcı giriş yaptıysa\r\n                            <>\r\n                             <input\r\n                                maxLength=\"30\"\r\n                                aria-label=\"Kullanıcı Adı Giriniz\"\r\n                                type=\"text\"\r\n                                placeholder=\"Kullanıcı Adı\"\r\n                                className=\"text-sm text-gray-base mt-2 py-5 px-4 h-2 border border-gray-primary rounded mb-2 mr-1\"\r\n                                onChange={({ target }) => setSearchName(target.value)}\r\n                            />\r\n\r\n                            <Link to={`/p/${searchName.toLowerCase()}`} aria-label=\"Search\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={`bg-gray-base text-white px-3 rounded h-10 font-bold  mr-4`}\r\n                                >\r\n                                Git\r\n                                </button>  \r\n                            </Link> \r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                title=\"Sign Out\"\r\n                                onClick={() => {\r\n                                    firebase.auth().signOut(); // Listener componentine bağlı olarak çıkış yap\r\n                                    history.push(ROUTES.LOGIN);\r\n                                }}\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === 'Enter') {\r\n                                    firebase.auth().signOut(); // Listener componentine bağlı olarak çıkış yap\r\n                                    history.push(ROUTES.LOGIN);\r\n                                    }\r\n                                }}\r\n                                >\r\n                                <svg\r\n                                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    fill=\"none\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                >\r\n                                    <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                                    />\r\n                                </svg>\r\n                            </button>                    \r\n\r\n                            <Link to={ROUTES.DISCOVER} aria-label=\"Discover\">\r\n                                <img className=\"mr-5\" width=\"25\" height=\"25\" src=\"https://image.flaticon.com/icons/png/512/622/622669.png\" />\r\n                            </Link>                            \r\n\r\n                            <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <svg\r\n                                        className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                    >\r\n                                        <path\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        strokeWidth={2}\r\n                                        d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                                        />\r\n                                </svg>\r\n                            </Link>\r\n\r\n                            <div className=\"flex items-center cursor-pointer\">\r\n                                <Link to={`/p/${user?.username}`}>\r\n                                <img\r\n                                    className=\"rounded-full h-8 w-8 flex\"\r\n                                    src={`${user?.userPicture}`}\r\n                                    alt={`${user?.username} profile`}\r\n                                />\r\n                                </Link>\r\n                            </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                            <Link to={ROUTES.LOGIN}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n                                >\r\n                                    Log In\r\n                                </button>\r\n                                </Link>\r\n                                <Link to={ROUTES.SIGN_UP}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\r\n                                >\r\n                                    Sign Up\r\n                                </button>\r\n                            </Link>\r\n                            </>\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function DiscoverProfile({profileDocId, username, profileId, userId, loggedInUserDocId, profilePicture, fullName, rank}){\r\n\r\n    return( \r\n        <div>\r\n            <div className=\"flex flex-row items-center align-items justify-between\">\r\n                <div className=\"flex items-center w-full\">\r\n                    <img\r\n                    className=\"rounded-full w-14 flex mr-5\"\r\n                    src={`${profilePicture}`}\r\n                    align=\"right\"\r\n                    alt=\"\"\r\n                    onError={(e) => {\r\n                        e.target.src = `/images/avatars/karl.jpg`;\r\n                    }}\r\n                    />\r\n                    <Link to={`/p/${username}`}>\r\n                    <p className=\"font-bold text-base text-left\">{username}</p>\r\n                    {rank != \"\" &&( \r\n                        <p style={{color: \"#6672DE\"}} className=\"text-red text-left\">{rank}</p>\r\n                    )}\r\n                    {rank == \"\" &&( \r\n                        <p className=\"text-base text-left\">{fullName}</p>\r\n                    )}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nDiscoverProfile.propTypes = {\r\n    profileDocId: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    profileId: PropTypes.string.isRequired,\r\n    userId: PropTypes.string.isRequired,\r\n    loggedInUserDocId: PropTypes.string.isRequired\r\n  };","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { getProfiles } from '../services/firebase';\r\nimport DiscoverProfile from './discover-profiles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Discovers(userId, following, loggedInUserDocId, loving){\r\n    const [profiles, setProfiles] = useState(null);\r\n    const [globalAmount, setAmount] = useState(0);\r\n\r\n    var amount = 0;\r\n    var str = window.location.href.split(\"/\");\r\n    var tail = str[str.length - 1];\r\n    str.pop();\r\n    const link = str.join(\"\");\r\n\r\n    useEffect(() =>{   \r\n        async function suggestedProfiles() {\r\n\r\n            if(str == \"discover\"){\r\n                amount= 0;\r\n            }\r\n            else{\r\n                if(Number.isInteger(parseInt(tail))){\r\n                    if(parseInt(tail) >= 0){\r\n                        amount = parseInt(tail);\r\n                    }\r\n                    else{\r\n                        amount = 0;  \r\n                    }   \r\n                }\r\n                else{\r\n                    amount = 0;\r\n                }\r\n            }\r\n\r\n            const response = await getProfiles(1000);\r\n            response.sort((a, b) => b.reputation - a.reputation);\r\n\r\n\r\n            response.splice(0,(amount * 50));\r\n\r\n            const rep = response.splice(0,50);\r\n\r\n            setAmount(amount);\r\n            setProfiles(rep);\r\n        }\r\n\r\n        suggestedProfiles();\r\n\r\n    }, [userId]); // Her UserID değiştiğinde tetikle\r\n\r\n  // go ahead and get suggested profiles\r\n  // hint: use the firebase service (call using userId)\r\n  // getSuggestedProfiles\r\n  // call the async function from the firebase service within useEffect\r\n  // store it in state\r\n  // go ahead and render (wait on the profiles as in 'skeleton')\r\n    return !profiles ? (\r\n        <Skeleton count={10} height={150} className=\"mt-5\" /> \r\n    ) : profiles.length > 0 ? (\r\n        <div classname=\"rounded flex flex-col\">\r\n            <div className=\"text-sm flex items-center align-items justify-between mb-2\">\r\n                <p className=\"font-bold text-gray-base ml-3\">Kullanıcı Profilleri</p>\r\n            </div>\r\n            <div className=\"mt-4 grid gap-5 mb-5 ml-3\">\r\n                {profiles.map((profile) => (\r\n                <DiscoverProfile\r\n                    key={profile.docId}\r\n                    profileDocId={profile.docId}\r\n                    username={profile.username}\r\n                    profileId={profile.userId}\r\n                    userId={userId.userId}\r\n                    loggedInUserDocId={userId.loggedInUserDocId}\r\n                    profilePicture={profile.userPicture}\r\n                    fullName={profile.fullName}\r\n                    rank={profile.rank} \r\n                />\r\n                ))}\r\n            </div>\r\n            <Link to={`/discover/${(globalAmount + 1)}`} aria-label=\"Dashboard\">\r\n                <button\r\n                type=\"button\"\r\n                className={`bg-gray-base text-white px-3 rounded h-10 font-bold  mr-3 ml-3`}\r\n                >\r\n                Sonraki Sayfa ({(globalAmount + 2)})\r\n                </button>  \r\n            </Link> \r\n        </div>\r\n\r\n    ) : <Link to={`/discover/${(globalAmount + 1)}`} aria-label=\"Dashboard\">\r\n    <button\r\n    type=\"button\"\r\n    className={`bg-gray-base text-white px-3 rounded h-10 font-bold  mr-3 ml-3`}\r\n    >\r\n    Sonraki Sayfa ({(globalAmount + 2)})\r\n    </button>  \r\n</Link> ;\r\n}\r\n\r\nDiscovers.propTypes = {\r\n    userId: PropTypes.string,\r\n    following: PropTypes.array,\r\n    loggedInUserDocId: PropTypes.string\r\n};","import Discovers from \"../components/discovers\";\r\nimport Header from \"../components/header\";\r\n\r\nexport default function Discover() {\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <Discovers />\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}