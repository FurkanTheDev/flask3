{"version":3,"sources":["services/firebase.js","hooks/use-user.js","components/header.js","components/profile/header.js","components/profile/photos.js","components/profile/index.js","pages/profile.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","doesUserIpExist","userIp","getUserByUserUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","limit","filter","profile","loving","includes","getProfiles","amount","getLovedProfiles","getSavedProfiles","following","getLoversProfiles","lovers","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","booleam","followers","updateLoggedInUserLoving","unfollowCooldown","followCount","resetMonth","resetDay","Date","m","getUTCMonth","d","getUTCDate","updateFollowedUserLovers","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","photosWithUserDetails","getUserPhotosByUsername","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","isUserLovingProfile","toggleFollow","activeUserDocId","followingUserId","toggleLove","updateUserInformation","newMotto","oldMotto","newBirthyear","oldBirthyear","newMood","oldMood","newStatus","oldStatus","newZodiac","oldZodiac","newsnapchat","oldSnapchat","newinstagram","oldInstagram","motto","birthyear","mood","status","zodiac","snapchat","instagram","deleteImage","photoDocId","updateUserReputationUp","rep","reputation","useUser","useState","activeUser","setActiveUser","useContext","UserContext","useEffect","uid","getUserObjByUserId","Header","FirebaseContext","loggedInUser","searchName","setSearchName","history","useHistory","className","to","ROUTES","src","alt","maxLength","type","placeholder","onChange","target","value","toLowerCase","title","onClick","auth","signOut","push","onKeyDown","event","key","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","width","height","userPicture","photosCount","followerCount","setFollowerCount","fullName","profileUsername","rank","maximumLove","setIsFollowingProfile","isLovingProfile","setIsLovingProfile","activeBtnFollow","activeBtnFollow2","timeleft","setTimeLeft","activeTimeLeft","handleToggleFollow","handleToggleLove","alert","toString","isLoggedInUserFollowingProfile","isFollowing","isLoggedInUserLovingProfile","isLoving","style","color","Photos","photos","updateUserReputationDown","document","location","reload","imageSrc","caption","count","Profile","useReducer","state","newState","photosCollection","dispatch","then","getProfileInfoAndPhotos","useParams","setUser","checkUserExists"],"mappings":"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","file":"static/js/9.0e3077b3.chunk.js","sourcesContent":["import { array } from 'prop-types';\r\nimport { storage ,firebase, FieldValue } from '../lib/firebase';\r\n\r\nexport async function doesUsernameExist(username) { // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username)\r\n    .get();\r\n\r\n    return result.docs.length > 0;\r\n}\r\n\r\nexport async function doesUserIpExist(userIp) { // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('ipAddress', '==', userIp)\r\n    .get();\r\n\r\n    return result.docs.length > 0;\r\n}\r\n\r\nexport async function getUserByUserUsername(username) {  // Kullanıcı adının kapılıp kapılmadığını kontrol et\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .where('username', '==', username)\r\n    .get();\r\n\r\n    return result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n}\r\n\r\n// get user from the firestore where userId === userId (passed from the auth)\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\r\n  const user = result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id\r\n  }));\r\n\r\n  return user;\r\n}\r\n\r\n// check all conditions before limit results\r\nexport async function getSuggestedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.loving.includes(profile.userId) && profile.loving.includes(userId.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results\r\nexport async function getProfiles(amount) {\r\n  const result = await firebase.firestore().collection('users').limit(amount).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getLovedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.loving.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getSavedProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.following.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\n// check all conditions before limit results \r\nexport async function getLoversProfiles(userId) {\r\n  const result = await firebase.firestore().collection('users').limit(10).get();\r\n  \r\n  return result.docs\r\n  .map((user) => ({ ...user.data(), docId: user.id })) // bütün kullanıcıları al\r\n  .filter((profile) => profile.userId !== userId.userId && userId.lovers.includes(profile.userId)); // içerisinden kullanıcıyı ve takip ettiklerini çıkar\r\n}\r\n\r\nexport async function updateLoggedInUserFollowing(\r\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n  profileId, // the user that karl requests to follow\r\n  isFollowingProfile // true/false (am i currently following this person?)\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(loggedInUserDocId)\r\n    .update({\r\n      following: isFollowingProfile\r\n        ? FieldValue.arrayRemove(profileId)\r\n        : FieldValue.arrayUnion(profileId)\r\n    });\r\n}\r\nexport async function updateFollowedUserFollowers(\r\n  profileDocId, // currently logged in user document id (karl's profile)\r\n  loggedInUserDocId, // the user that karl requests to follow\r\n  isFollowingProfile, // true/false (am i currently following this person?)\r\n  booleam\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: isFollowingProfile\r\n        ? FieldValue.arrayRemove(loggedInUserDocId)\r\n        : FieldValue.arrayUnion(loggedInUserDocId)\r\n    });\r\n  }\r\n\r\n  export async function updateLoggedInUserLoving(\r\n    loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n    profileId, // the user that karl requests to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n    unfollowCooldown,\r\n    followCount,\r\n    resetMonth,\r\n    resetDay\r\n  ) {\r\n    var a = new Date();\r\n    var m = a.getUTCMonth();\r\n    var d = a.getUTCDate();\r\n\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(loggedInUserDocId)\r\n      .update({\r\n        loving: isFollowingProfile\r\n          ? unfollowCooldown ? FieldValue.arrayRemove(profileId) :  FieldValue.arrayRemove('') // Burası cooldown\r\n          : followCount ? FieldValue.arrayUnion(profileId) : FieldValue.arrayRemove(''), // Burası count\r\n        resetDay: unfollowCooldown ? (d+3) : resetDay,\r\n        resetMonth: unfollowCooldown ? (m) : resetMonth\r\n      });\r\n  }\r\n  export async function updateFollowedUserLovers(\r\n    profileDocId, // currently logged in user document id (karl's profile)\r\n    loggedInUserDocId, // the user that karl requests to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n    unfollowCooldown,\r\n    followCount\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(profileDocId)\r\n      .update({\r\n        lovers: isFollowingProfile\r\n          ? unfollowCooldown ? FieldValue.arrayRemove(loggedInUserDocId) :  FieldValue.arrayRemove('')// Burası\r\n          : followCount ? FieldValue.arrayUnion(loggedInUserDocId) : FieldValue.arrayRemove('')\r\n      });\r\n    }\r\n \r\n  export async function getPhotos(userId, following) {\r\n    // [5,4,2] => following \r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .where('userId', 'in', following) // kulanıcının UserID'sinin following kısmında olduğu yerleri al\r\n      .get();\r\n  \r\n    const userFollowedPhotos = result.docs.map((photo) => ({\r\n      ...photo.data(),\r\n      docId: photo.id\r\n    }));\r\n  \r\n    const photosWithUserDetails = await Promise.all(\r\n      userFollowedPhotos.map(async (photo) => {\r\n        let userLikedPhoto = false;\r\n        \r\n        // photo.userId = 2\r\n        const user = await getUserByUserId(photo.userId);\r\n        // raphael\r\n        const { username } = user[0];\r\n        return { username, ...photo, userLikedPhoto };\r\n      })\r\n    );\r\n  \r\n    return photosWithUserDetails;\r\n  }\r\n\r\n  /*\r\n  export async function getUserIdByUsername(username){\r\n    const result = firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: isFollowingProfile\r\n        ? FieldValue.arrayRemove(loggedInUserDocId)\r\n        : FieldValue.arrayUnion(loggedInUserDocId)\r\n    });\r\n  }\r\n  */\r\n\r\n  export async function getUserPhotosByUsername(username) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .where('userId', '==', username)\r\n      .get();\r\n  \r\n    return result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  }\r\n\r\n  export async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\r\n      .where('following', 'array-contains', profileUserId)\r\n      .get();\r\n  \r\n    const [response = {}] = result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  \r\n    return response.userId;\r\n  }\r\n\r\n  export async function isUserLovingProfile(loggedInUserUsername, profileUserId) {\r\n    const result = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .where('username', '==', loggedInUserUsername) // karl (active logged in user)\r\n      .where('loving', 'array-contains', profileUserId)\r\n      .get();\r\n  \r\n    const [response = {}] = result.docs.map((item) => ({\r\n      ...item.data(),\r\n      docId: item.id\r\n    }));\r\n  \r\n    return response.userId;\r\n  }\r\n  \r\n  export async function toggleFollow(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId\r\n  ) {\r\n    // 1st param: karl's doc id\r\n    // 2nd param: raphael's user id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\r\n  \r\n    // 1st param: karl's user id\r\n    // 2nd param: raphael's doc id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\r\n  }\r\n\r\n  export async function toggleLove(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId,\r\n    unfollowCooldown,\r\n    followCount,\r\n    resetMonth,\r\n    resetDay\r\n  ) {\r\n    // 1st param: karl's doc id\r\n    // 2nd param: raphael's user id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateLoggedInUserLoving(activeUserDocId, profileUserId, isFollowingProfile,unfollowCooldown,followCount,resetMonth,resetDay);\r\n  \r\n    // 1st param: karl's user id\r\n    // 2nd param: raphael's doc id\r\n    // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\r\n    await updateFollowedUserLovers(profileDocId, followingUserId, isFollowingProfile,unfollowCooldown,followCount);\r\n  }\r\n  \r\n  export async function updateUserInformation(\r\n    loggedInUserDocId, // currently logged in user document id (karl's profile)\r\n    newMotto,  // Users new motto\r\n    oldMotto,  // Users old motto\r\n    newBirthyear,\r\n    oldBirthyear,\r\n    newMood,\r\n    oldMood,\r\n    newStatus,\r\n    oldStatus,\r\n    newZodiac,\r\n    oldZodiac,\r\n    newsnapchat,\r\n    oldSnapchat,\r\n    newinstagram,\r\n    oldInstagram\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(loggedInUserDocId)\r\n      .update({\r\n        motto: newMotto\r\n        ? newMotto\r\n        : oldMotto,\r\n        birthyear: newBirthyear\r\n        ? newBirthyear\r\n        : oldBirthyear,\r\n        mood: newMood\r\n        ? newMood\r\n        : oldMood,\r\n        status: newStatus\r\n        ? newStatus\r\n        : oldStatus,\r\n        zodiac: newZodiac\r\n        ? newZodiac\r\n        : oldZodiac,\r\n        snapchat: newsnapchat\r\n        ? newsnapchat\r\n        : oldSnapchat,\r\n        instagram: newinstagram\r\n        ? newinstagram\r\n        : oldInstagram\r\n      });\r\n  }\r\n\r\n  export async function deleteImage (photoDocId) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('photos')\r\n      .doc(photoDocId)\r\n      .update(\r\n        {userId : \"\"\r\n      });\r\n  }\r\n\r\n  export async function updateUserReputationUp(\r\n    profileDocId,\r\n    rep\r\n  ) {\r\n    return firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(profileDocId)\r\n      .update({\r\n        reputation : rep + 1\r\n      });\r\n  }","import { useState, useEffect, useContext } from 'react';\r\nimport UserContext from '../context/user'\r\nimport { getUserByUserId } from '../services/firebase';\r\n\r\nexport default function useUser() {\r\n  const [activeUser, setActiveUser] = useState({});\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => { // Eğer Kullanıcı değişirse\r\n    async function getUserObjByUserId() {\r\n        // Kullanıcı ID'si üzerinden kullanıcının verilerini çekecek bir fonksiyon\r\n      const [response] = await getUserByUserId(user.uid);\r\n      setActiveUser(response);\r\n    }\r\n\r\n    if (user?.uid) {\r\n      getUserObjByUserId();\r\n    }\r\n  }, [user]);\r\n\r\n  return { user: activeUser };\r\n}","import { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport FirebaseContext from '../context/firebase';\r\nimport UserContext from '../context/user';\r\nimport * as ROUTES from '../constants/routes';\r\nimport useUser from '../hooks/use-user';\r\n\r\nexport default function Header() {\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const { user: loggedInUser } = useContext(UserContext);\r\n    const { user } = useUser(loggedInUser?.uid);\r\n\r\n    const [searchName, setSearchName] = useState('');\r\n    const history = useHistory();\r\n\r\n    return( \r\n        <header className=\"h-16 bg-white border-b border-gray-primary mb-8 px-2\">\r\n            <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n                <div className=\"flex justify-between h-full\">\r\n                    <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\r\n                        <h1 className=\"flex justify-center w-full\">\r\n                            <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\r\n                                <img src=\"https://firebasestorage.googleapis.com/v0/b/flask-895ac.appspot.com/o/DefaultAvatar%2Fbetalogo.png?alt=media&token=65dda1f6-05cb-4390-ac6a-92852feb123c\" alt=\"Instagram\" className=\"mt-2 w-6/12\" />\r\n                            </Link>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"text-gray-700 text-center flex items-center align-items\">\r\n                        {user ? ( // eğer kullanıcı giriş yaptıysa\r\n                            <>\r\n                             <input\r\n                                maxLength=\"30\"\r\n                                aria-label=\"Kullanıcı Adı Giriniz\"\r\n                                type=\"text\"\r\n                                placeholder=\"Kullanıcı Adı\"\r\n                                className=\"text-sm text-gray-base mt-2 py-5 px-4 h-2 border border-gray-primary rounded mb-2 mr-1\"\r\n                                onChange={({ target }) => setSearchName(target.value)}\r\n                            />\r\n\r\n                            <Link to={`/p/${searchName.toLowerCase()}`} aria-label=\"Search\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={`bg-gray-base text-white px-3 rounded h-10 font-bold  mr-4`}\r\n                                >\r\n                                Git\r\n                                </button>  \r\n                            </Link> \r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                title=\"Sign Out\"\r\n                                onClick={() => {\r\n                                    firebase.auth().signOut(); // Listener componentine bağlı olarak çıkış yap\r\n                                    history.push(ROUTES.LOGIN);\r\n                                }}\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === 'Enter') {\r\n                                    firebase.auth().signOut(); // Listener componentine bağlı olarak çıkış yap\r\n                                    history.push(ROUTES.LOGIN);\r\n                                    }\r\n                                }}\r\n                                >\r\n                                <svg\r\n                                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    fill=\"none\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                >\r\n                                    <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                                    />\r\n                                </svg>\r\n                            </button>                    \r\n\r\n                            <Link to={ROUTES.DISCOVER} aria-label=\"Discover\">\r\n                                <img className=\"mr-5\" width=\"25\" height=\"25\" src=\"https://image.flaticon.com/icons/png/512/622/622669.png\" />\r\n                            </Link>                            \r\n\r\n                            <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\r\n                                    <svg\r\n                                        className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        stroke=\"currentColor\"\r\n                                    >\r\n                                        <path\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                        strokeWidth={2}\r\n                                        d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                                        />\r\n                                </svg>\r\n                            </Link>\r\n\r\n                            <div className=\"flex items-center cursor-pointer\">\r\n                                <Link to={`/p/${user?.username}`}>\r\n                                <img\r\n                                    className=\"rounded-full h-8 w-8 flex\"\r\n                                    src={`${user?.userPicture}`}\r\n                                    alt={`${user?.username} profile`}\r\n                                />\r\n                                </Link>\r\n                            </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                            <Link to={ROUTES.LOGIN}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n                                >\r\n                                    Log In\r\n                                </button>\r\n                                </Link>\r\n                                <Link to={ROUTES.SIGN_UP}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\r\n                                >\r\n                                    Sign Up\r\n                                </button>\r\n                            </Link>\r\n                            </>\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport useUser from '../../hooks/use-user';\r\nimport { isUserFollowingProfile, isUserLovingProfile, toggleFollow, toggleLove } from '../../services/firebase';\r\nimport UserContext from '../../context/user';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nvar a = new Date();\r\nvar m = a.getUTCMonth();\r\nvar d = a.getUTCDate();\r\n\r\nexport default function Header({\r\n  photosCount,\r\n  followerCount,\r\n  setFollowerCount,\r\n  profile: {\r\n    docId: profileDocId,\r\n    userId: profileUserId,\r\n    fullName,\r\n    followers,\r\n    following,\r\n    username: profileUsername,\r\n    zodiac,\r\n    motto,\r\n    mood,\r\n    reputation,\r\n    status,\r\n    birthyear,\r\n    userPicture,\r\n    rank,\r\n    snapchat,\r\n    instagram,\r\n    maximumLove\r\n  }\r\n}) {\r\n  const { user: loggedInUser } = useContext(UserContext);\r\n  const { user } = useUser(loggedInUser?.uid);\r\n  const [isFollowingProfile, setIsFollowingProfile] = useState(false);\r\n  const [isLovingProfile, setIsLovingProfile] = useState(false);\r\n  const activeBtnFollow = user?.username && user?.username !== profileUsername;\r\n  const activeBtnFollow2 = user.loving?.length < user?.maximumLove;\r\n  const [timeleft, setTimeLeft] = useState(null);\r\n\r\n  var activeTimeLeft = false;\r\n\r\n  if (m > user?.resetMonth) {\r\n    activeTimeLeft = true;\r\n  } else {\r\n    if (d >= user?.resetDay) {\r\n      activeTimeLeft = true;\r\n    }\r\n    else{\r\n      activeTimeLeft = false;\r\n    }\r\n  }\r\n\r\n  const handleToggleFollow = async () => {\r\n    setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n    setFollowerCount({\r\n      followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\r\n    });\r\n    await toggleFollow(isFollowingProfile, user.docId, profileDocId, profileUserId, user.userId);\r\n  };\r\n\r\n  const handleToggleLove = async () => {\r\n    if(!isLovingProfile) {\r\n      if(user.loving?.length < user?.maximumLove){\r\n        setIsLovingProfile((isLovingProfile) => !isLovingProfile);\r\n      }\r\n      else {\r\n        alert(user?.maximumLove.toString() + \"'den fazla kişiden hoşlanamazsınız.\");\r\n      }\r\n    }\r\n    else{\r\n      if (m > user?.resetMonth) {\r\n        activeTimeLeft = true;\r\n      } else {\r\n        if (d >= user?.resetDay) {\r\n          activeTimeLeft = true;\r\n        }\r\n        else{\r\n          activeTimeLeft = false;\r\n        }\r\n      }\r\n      \r\n      if(activeTimeLeft){\r\n        setIsLovingProfile((isLovingProfile) => !isLovingProfile);\r\n      }\r\n      else {\r\n        alert(user?.resetDay.toString() + \" \" + (user?.resetMonth + 1).toString() + \" tarihinden önce hoşlanmayı kaldıramazsınız.\");\r\n      }\r\n    }\r\n    await toggleLove(isLovingProfile, user.docId, profileDocId, profileUserId, user.userId, activeTimeLeft, activeBtnFollow2, user?.resetMonth, user?.resetDay);\r\n    setTimeLeft((user?.resetDay)?.toString() + \" \" +(user?.resetMonth + 1)?.toString());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isLoggedInUserFollowingProfile = async () => {\r\n      const isFollowing = await isUserFollowingProfile(user.username, profileUserId);\r\n      setIsFollowingProfile(!!isFollowing);\r\n    };\r\n\r\n    const isLoggedInUserLovingProfile = async () => {\r\n      const isLoving = await isUserLovingProfile(user.username, profileUserId);\r\n      setIsLovingProfile(!!isLoving);\r\n    };\r\n\r\n    if (user?.username && profileUserId) {\r\n      isLoggedInUserFollowingProfile();\r\n      isLoggedInUserLovingProfile();\r\n    }\r\n    \r\n    setTimeLeft((user?.resetDay)?.toString() + \" \" +(user?.resetMonth + 1)?.toString());\r\n  }, [user?.username, profileUserId]);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\r\n      <div className=\"container flex justify-center items-center\">\r\n        {profileUsername ? (\r\n          <img\r\n            className=\"rounded-full h-30 w-30 flex\"\r\n            alt={`${fullName} profile picture`}\r\n            src={userPicture}\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"rounded-full h-40 w-40 flex\"\r\n            alt={\"Karl Hadwen's profile picture\"}\r\n            src={userPicture}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"flex items-center justify-center flex-col col-span-2\">\r\n        <div className=\"container flex items-center\">\r\n          <p className=\"text-2xl mr-4\">{profileUsername}</p>\r\n          {activeBtnFollow && (\r\n            <button\r\n              className=\"bg-gray-base font-bold text-sm rounded text-white w-20 h-8\"\r\n              type=\"button\"\r\n              onClick={handleToggleFollow}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  handleToggleFollow();\r\n                }\r\n              }}\r\n            >\r\n              {isFollowingProfile ? 'Kaydetme' : 'Kaydet'}\r\n            </button>\r\n          )}\r\n          {!activeBtnFollow && (\r\n            <Link to={ROUTES.SETTINGS}>\r\n              <button className=\"bg-gray-base font-bold text-sm rounded text-white w-20 h-8\" type=\"button\">\r\n                  Düzenle\r\n              </button>\r\n            </Link>\r\n\r\n          )}\r\n          \r\n          {activeBtnFollow && (\r\n            <button\r\n              className=\"bg-gray-base font-bold text-sm rounded text-white w-20 h-8 ml-2\"\r\n              type=\"button\"\r\n              onClick={handleToggleLove}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  handleToggleLove();\r\n                }\r\n              }}\r\n            >\r\n              {isLovingProfile ? 'Hoşlanma' : 'Hoşlan'}\r\n            </button>\r\n          )}\r\n\r\n        </div>\r\n        <div className=\"container mt-4\">\r\n          <p className=\"font-medium\">{!fullName ? <img /> : fullName}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!rank ? <img /> :<p style={{color: \"#6672DE\"}}>{rank}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!motto ? <img /> : motto}</p>\r\n        </div>\r\n        <div className=\"container mt-4\">\r\n          <p className=\"font-small\">{!birthyear ? <img /> : <p><b>Doğumyılı: </b> {birthyear}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!zodiac ? <img /> : <p><b>Burç: </b> {zodiac}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!snapchat ? <img /> : <p><b>Snapchat: </b> {snapchat}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!instagram ? <img /> : <p><b>Instagram: </b> {instagram}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!mood ? <img /> : <p><b>Ruh Hali: </b> {mood}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!status ? <img /> : <p><b>İlişki Durumu: </b> {status}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!reputation ? <img /> : <p><b>Şöhret Puanı: </b> {reputation}</p>}</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"font-small\">{!(activeBtnFollow && user?.resetDay && isLovingProfile) ? <img /> : <p><b>Hoşlanmanın kaldırılabileceği tarih: </b> {timeleft}</p>}</p>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  photosCount: PropTypes.number.isRequired,\r\n  followerCount: PropTypes.number.isRequired,\r\n  setFollowerCount: PropTypes.func.isRequired,\r\n  profile: PropTypes.shape({\r\n    docId: PropTypes.string,\r\n    userId: PropTypes.string,\r\n    fullName: PropTypes.string,\r\n    username: PropTypes.string,\r\n    followers: PropTypes.array,\r\n    following: PropTypes.array\r\n  }).isRequired\r\n};","/* eslint-disable no-nested-ternary */\r\nimport PropTypes from 'prop-types';\r\nimport { useContext } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport UserContext from '../../context/user';\r\nimport useUser from '../../hooks/use-user';\r\nimport { deleteImage } from '../../services/firebase';\r\nimport { firebase } from '../../lib/firebase';\r\n\r\nexport default function Photos({ photos }) {\r\n  const { user: loggedInUser } = useContext(UserContext);\r\n  const { user } = useUser(loggedInUser?.uid);\r\n  const activeBtnFollow = user?.userId == photos[0]?.userId;\r\n\r\n  const updateUserReputationDown = async (profileDocId, rep) =>{\r\n    if(rep > 0){\r\n      await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(profileDocId)\r\n      .update({\r\n        reputation : rep - 1\r\n      });\r\n    }\r\n\r\n    document.location.reload(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-16 border-t border-gray-primary mt-12 pt-4 px-2\">\r\n      <div className=\"grid grid-cols-3 gap-8 mt-4 mb-12\">\r\n        {!photos ? (\r\n          <>\r\n            <Skeleton count={12} width={320} height={400} />\r\n          </>\r\n        ) : photos.length > 0 ? (\r\n          photos.map((photo) => (\r\n            <div key={photo.docId} className=\"relative group mx-auto my-auto\">\r\n              <img src={photo.imageSrc} alt={photo.caption} className=\"justify-center mx-auto my-auto\"/>\r\n              {activeBtnFollow && (\r\n                <button\r\n                type=\"button\"\r\n                className=\"bg-red-primary font-bold text-sm rounded text-white w-full h-full\"\r\n                onClick={() => {\r\n                    deleteImage(photo.docId); // Listener componentine bağlı olarak çıkış yap\r\n                    updateUserReputationDown(user.docId,user.reputation);\r\n                }}>\r\n                  Sil\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : null}\r\n      </div>\r\n\r\n      {!photos || (photos.length === 0 && <p className=\"text-center text-2xl\">Gösterilecek Fotoğraf Yok</p>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotos.propTypes = {\r\n  photos: PropTypes.array.isRequired\r\n};","import { useReducer, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Header from './header';\r\nimport Photos from './photos';\r\nimport { getUserPhotosByUsername } from '../../services/firebase';\r\n\r\nexport default function Profile({ user }) { \r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState});\r\n    const initialState = {\r\n        profile: {},\r\n        photosCollection: [],\r\n        followerCount: 0\r\n    };\r\n    \r\n    const [{profile, photosCollection, followerCount }, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        async function getProfileInfoAndPhotos() {\r\n          const photos = getUserPhotosByUsername(user.userId);\r\n          \r\n          photos.then(function(result) {\r\n            dispatch({ profile: user, photosCollection: result, followerCount: user.followers.length});\r\n          })\r\n         \r\n        }\r\n        if(user.username){\r\n            getProfileInfoAndPhotos();\r\n        }\r\n      }, [user.username]);\r\n\r\n      return (\r\n          <>\r\n            <Header\r\n                photosCount={photosCollection ? photosCollection.length : 0}\r\n                profile={profile}\r\n                followerCount={followerCount}\r\n                setFollowerCount={dispatch}\r\n            />\r\n            <Photos photos={photosCollection} />\r\n          </>      \r\n      );\r\n    }\r\n\r\n\r\n    Profile.propTypes = {\r\n        user: PropTypes.shape({\r\n          dateCreated: PropTypes.number,\r\n          emailAddress: PropTypes.string,\r\n          followers: PropTypes.array,\r\n          following: PropTypes.array,\r\n          fullName: PropTypes.string,\r\n          userId: PropTypes.string,\r\n          username: PropTypes.string\r\n        })\r\n    };","import { useParams, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getUserByUserUsername } from '../services/firebase';\r\nimport * as ROUTES from '../constants/routes';\r\nimport Header from '../components/header';\r\nimport UserProfile from '../components/profile';\r\n\r\nexport default function Profile() {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function checkUserExists() {\r\n      const [user] = await getUserByUserUsername(username);\r\n      if (user?.userId) {\r\n        setUser(user);\r\n      } else {\r\n        history.push(ROUTES.NOT_FOUND);\r\n      }\r\n    }\r\n\r\n    checkUserExists();\r\n  }, [username, history]);\r\n\r\n  return user?.username ? (\r\n    <div className=\"bg-gray-background\">\r\n      <Header />\r\n      <div className=\"mx-auto max-w-screen-lg\">\r\n        <UserProfile user={user} />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}"],"sourceRoot":""}