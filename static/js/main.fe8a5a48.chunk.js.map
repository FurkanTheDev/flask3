{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","helpers/protected-route.js","helpers/is-user-logged-in.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","SETTINGS","DISCOVER","AGREEMENT","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","storage","UserContext","ProtectedRoute","user","children","rest","render","location","React","cloneElement","to","pathname","ROUTES","state","from","IsUserLoggedIn","loggedInPath","Login","lazy","SignUp","Dashboard","Profile","NotFound","Settings","Discover","Agreement","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","document","body","style","transform","transformOrigin","width","Provider","value","fallback","className","src","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fe8a5a48.chunk.js","sourcesContent":["export const DASHBOARD = '/';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/sign-up';\r\nexport const PROFILE = '/p/:username';\r\nexport const NOT_FOUND = '/not-found';\r\nexport const SETTINGS = '/settings';\r\nexport const DISCOVER = '/discover';\r\nexport const AGREEMENT = '/agreement';","import { createContext } from 'react';\r\n\r\nconst FirebaseContext = createContext(null);\r\nexport default FirebaseContext;","import Firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCvQsSh8lj-X-X4qqAspXY-mTolvzj2A98\",\r\n    authDomain: \"flask-895ac.firebaseapp.com\",\r\n    projectId: \"flask-895ac\",\r\n    storageBucket: \"flask-895ac.appspot.com\",\r\n    messagingSenderId: \"818918561694\",\r\n    appId: \"1:818918561694:web:bc9b45a93584f191c6688f\"\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase, FieldValue };","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext(null);\r\nexport default UserContext;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) => {\r\n          if (user) {\r\n            return React.cloneElement(children, { user });\r\n          }\r\n  \r\n          if (!user) {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: ROUTES.LOGIN,\r\n                  state: { from: location }\r\n                }}\r\n              />\r\n            );\r\n          }\r\n  \r\n          return null;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  \r\n  ProtectedRoute.propTypes = {\r\n    user: PropTypes.object,\r\n    children: PropTypes.object.isRequired\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function IsUserLoggedIn({ user, loggedInPath, children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) => {\r\n          if (!user) {\r\n            return React.cloneElement(children, { user });\r\n          }\r\n  \r\n          if (user) {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: loggedInPath,\r\n                  state: { from: location }\r\n                }}\r\n              />\r\n            );\r\n          }\r\n  \r\n          return null;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  \r\n  IsUserLoggedIn.propTypes = {\r\n    user: PropTypes.object,\r\n    loggedInPath: PropTypes.string.isRequired,\r\n    children: PropTypes.object.isRequired\r\n  };","import { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport useAuthListener from './hooks/use-auth-listener';\nimport UserContext from './context/user';\n\nimport ProtectedRoute from './helpers/protected-route';\nimport IsUserLoggedIn from './helpers/is-user-logged-in';\n\nconst Login = lazy(() => import ('./pages/login'));\nconst SignUp = lazy(() => import ('./pages/sign-up'));\nconst Dashboard = lazy(() => import ('./pages/dashboard'));\nconst Profile = lazy(() => import ('./pages/profile'));\nconst NotFound = lazy(() => import ('./pages/not-found'));\nconst Settings = lazy(() => import ('./pages/settings'));\nconst Discover = lazy(() => import ('./pages/discover'));\nconst Agreement = lazy(() => import ('./pages/agreement'));\n\nexport default function App() { // Sayfa değiştirme işlemleri burada tanımlanıyor\n  const { user } = useAuthListener(); // Giriş yapmış olan kullanıcının bilgileri\n\n  /*\n  var scale = 'scale(0.5)';\n  document.body.style.transform = scale;\n  */\n\n  document.body.style.transform = \"scale(0.5)\"\n  document.body.style.transformOrigin = \"0 0\";\n  document.body.style.width = \"200%\";\n\n  return (\n    <UserContext.Provider value={{ user }}> \n      <Router>\n        <Suspense fallback={<img className=\"w-full h-full object-none object-center\" src=\"https://firebasestorage.googleapis.com/v0/b/flask-895ac.appspot.com/o/DefaultAvatar%2Fbetalogogray.png?alt=media&token=12d2e8c7-a962-46c1-ab5c-75fb15fe7cc1\" />}>\n          <Switch>\n            <IsUserLoggedIn user={user} loggedInPath={ROUTES.DASHBOARD} path={ROUTES.LOGIN}>\n              <Login />\n            </IsUserLoggedIn>\n            <IsUserLoggedIn user={user} loggedInPath={ROUTES.DASHBOARD} path={ROUTES.SIGN_UP}>\n              <SignUp />\n            </IsUserLoggedIn>\n            <Route path={ROUTES.PROFILE} component={Profile}/>\n            <Route path={ROUTES.DISCOVER} component={Discover}/>\n            <Route path={ROUTES.AGREEMENT} component={Agreement}/>\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n            <ProtectedRoute user={user} path={ROUTES.SETTINGS} exact>\n              <Settings />\n            </ProtectedRoute>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}","import { useState, useEffect, useContext } from 'react';\r\nimport FirebaseContext from '../context/firebase';\r\n\r\nexport default function useAuthListener() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // we have a user...therefore we can store the user in localstorage\r\n        localStorage.setItem('authUser', JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        // we don't have an authUser, therefore clear the localstorage\r\n        localStorage.removeItem('authUser');\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport FirebaseContext from './context/firebase';\nimport { firebase, FieldValue } from './lib/firebase';\nimport './styles/app.css'\n\nReactDOM.render( // projeyi firebase ile çalıştır\n    <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}